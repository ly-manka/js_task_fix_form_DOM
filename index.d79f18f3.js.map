{"mappings":"ACEA,IAAM,EAAS,SAAS,gBAAgB,CAAC,oBAEpC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAc,CAAA,CAAA,OAAA,QAAA,CAAA,GAAd,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAsB,CAAtB,IAYkB,EAZZ,EAAN,EAAA,KAAA,CACG,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAYJ,CAFmB,EAVe,EAAK,IAAI,EAYtC,MAAM,CAAC,GAAG,WAAW,GAC1B,EACG,OAAO,CAAC,kBAAmB,SAC3B,WAAW,GACX,KAAK,CAAC,EAdX,CAAA,EAAM,SAAS,CAAG,cAClB,EAAM,OAAO,CAAG,EAAK,EAAE,CACvB,EAAM,SAAS,CAAG,EAClB,EAAK,WAAW,CAAG,EAEnB,EAAK,MAAM,CAAC,EACd,C,C,M,E,CAVK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar inputs = document.querySelectorAll(\"form > * > input\");\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = inputs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var item = _step.value;\n        var label = document.createElement(\"label\");\n        var formattedName = camelToNormal(item.name);\n        label.className = \"field-label\";\n        label.htmlFor = item.id;\n        label.innerText = formattedName;\n        item.placeholder = formattedName;\n        item.before(label);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\nfunction camelToNormal(text) {\n    return text.charAt(0).toUpperCase() + text.replace(/([a-z])([A-Z])/g, \"$1 $2\").toLowerCase().slice(1);\n}\n\n//# sourceMappingURL=index.d79f18f3.js.map\n","'use strict';\n\nconst inputs = document.querySelectorAll('form > * > input');\n\nfor (const item of inputs) {\n  const label = document.createElement('label');\n  const formattedName = camelToNormal(item.name);\n\n  label.className = 'field-label';\n  label.htmlFor = item.id;\n  label.innerText = formattedName;\n  item.placeholder = formattedName;\n\n  item.before(label);\n}\n\nfunction camelToNormal(text) {\n  return (\n    text.charAt(0).toUpperCase() +\n    text\n      .replace(/([a-z])([A-Z])/g, '$1 $2')\n      .toLowerCase()\n      .slice(1)\n  );\n}\n"],"names":["inputs","document","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","text","item","value","label","createElement","formattedName","name","charAt","toUpperCase","replace","toLowerCase","slice","className","htmlFor","id","innerText","placeholder","before","err","return"],"version":3,"file":"index.d79f18f3.js.map"}